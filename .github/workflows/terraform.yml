name: Terraform Full VM Deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      id-token: write
      
    # AZ CLI install.
    steps:
    - name: Install azure-cli
      run: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
    
    # Azure SP login with secrets.
#     - name: Az Login
#       uses: azure/login@v1
#       with:
#           creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SCRT }}","subscriptionId":"${{ secrets.SUB_ID }}","tenantId":"${{ secrets.TEN_ID }}"}'
    
    # Azure login for User with secrets.
#     - name: Azure User Login
#       run: az login -u ${{ secrets.user }} -p ${{ secrets.passwd }}
    
    # Checkout
    - name: Checkout
      uses: actions/checkout@v3.5.3
      
          # STA for Terraform TFSTATE
    - name: Azure CLI script file
      run: |
        chmod +x $GITHUB_WORKSPACE/*.sh
        $GITHUB_WORKSPACE/RGforTFSTATE.sh
        $GITHUB_WORKSPACE/STAforTFSTATE.sh
        $GITHUB_WORKSPACE/CONTforTFSTATE.sh

    - name: Terraform INIT RGROUP
      run: terraform -chdir=$GITHUB_WORKSPACE/depRGROUP/ init

    - name: Terraform PLAN RGROUP
      run: terraform -chdir=$GITHUB_WORKSPACE/depRGROUP/ plan
    
    - name: Terraform APPLY RGROUP
      run: terraform -chdir=$GITHUB_WORKSPACE/depRGROUP/ apply
